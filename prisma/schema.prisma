// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("VITE_DATABASE_URL")
}

model User {
  id            String @id @default(uuid())
  firstName     String
  lastName      String
  contactOption String
  role          Role   @default(USER)
  password      String
  order         Order?
  orderId       Int
}

model Order {
  id     String @id @default(uuid())
  types  String
  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
}

// CAKE MODEL
model Cake {
  id             String            @id @default(uuid())
  shape          Shape             @relation(fields: [shapeId], references: [id])
  shapeId        String
  tier           Tier              @relation(fields: [tierId], references: [id])
  tierId         String
  size           Size              @relation(fields: [sizeId], references: [id])
  sizeId         String
  flavor         CakeFlavor        @relation(fields: [flavorId], references: [id])
  flavorId       String
  frosting       CakeFrosting      @relation(fields: [frostingId], references: [id])
  frostingId     String
  filling        CakeFilling       @relation(fields: [fillingId], references: [id])
  fillingId      String
  fruitFilling   CakeFruitFilling? @relation(fields: [fruitFillingId], references: [id])
  fruitFillingId String?
  fruitTopping   CakeFruitTopping? @relation(fields: [fruitToppingId], references: [id])
  fruitToppingId String?
}

model Shape {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model Tier {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model Size {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model CakeFlavor {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model CakeFrosting {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model CakeFilling {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model CakeFruitFilling {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

model CakeFruitTopping {
  id   String @id @default(uuid())
  name String
  cake Cake[]
}

// CUPCAKE MODEL
model Cupcake {
  id           String  @id @default(uuid())
  size         String
  amount       String
  flavor       String
  frosting     String
  filling      String?
  fruitFilling String?
  fruitTopping String?
}

model Cookie {
  id           String  @id @default(uuid())
  size         String
  amount       String
  flavor       String
  frosting     String?
  filling      String?
  fruitFilling String?
  fruitTopping String?
}

model ContactInfo {
  id              String   @id @default(uuid())
  date            DateTime
  deliveryOption  String
  deliveryAddress String?
  theme           String
  colors          String
  details         String?
}

enum Role {
  USER
  ADMIN
}
